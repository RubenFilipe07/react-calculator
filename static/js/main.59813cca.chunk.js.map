{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","reportWebVitals.js","index.js"],"names":["props","classes","operation","double","triple","onClick","e","click","label","className","initialState","displayValue","clearDisplay","values","current","Calculator","state","clearMemory","bind","setOperation","addDigit","this","setState","equals","currentOperation","eval","n","includes","i","newValue","parseFloat","console","log","value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59813cca.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.css'\r\n\r\nexport default props =>{\r\n    let classes = 'button '\r\n    classes += props.operation ? 'operation' : ''\r\n    classes += props.double ? 'double' : ''\r\n    classes += props.triple ? 'triple' : ''\r\n\r\n    return(\r\n        <button\r\n        onClick={e => props.click && props.click(props.label)}\r\n        className={classes}>\r\n            {props.label}\r\n        </button>\r\n    )\r\n}        ","import React, { Component } from 'react'\r\nimport './Calculator.css'\r\n\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display'\r\n\r\nconst initialState = {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0, 0],\r\n    current: 0\r\n}\r\n\r\nexport default class Calculator extends Component {\r\n\r\n    state = { ...initialState }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.clearMemory = this.clearMemory.bind(this)\r\n        this.setOperation = this.setOperation.bind(this)\r\n        this.addDigit = this.addDigit.bind(this)\r\n    }\r\n\r\n    clearMemory() {\r\n        this.setState({ ...initialState })\r\n    }\r\n\r\n    setOperation(operation) {\r\n        if (this.state.current === 0) {\r\n            this.setState({ operation, current: 1, clearDisplay: true })\r\n        } else {\r\n            const equals = operation === '='\r\n            let currentOperation = this.state.operation\r\n            \r\n                if(currentOperation === 'รท'){\r\n                    currentOperation = '/'\r\n                }\r\n\r\n                if(currentOperation === 'x'){\r\n                    currentOperation = '*'\r\n                }\r\n                \r\n            const values = [...this.state.values]\r\n            try {\r\n                values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\r\n            } catch(e) {\r\n                values[0] = this.state.values[0]\r\n            }\r\n\r\n            values[1] = 0\r\n\r\n            this.setState({\r\n                displayValue: values[0],\r\n                operation: equals ? null : operation,\r\n                current: equals ? 0 : 1,\r\n                clearDisplay: !equals,\r\n                values\r\n            })\r\n        }\r\n    }\r\n\r\n    addDigit(n) {\r\n        if (n === '.' && this.state.displayValue.includes('.')) {\r\n            return\r\n        }\r\n\r\n        const clearDisplay = this.state.displayValue === '0'\r\n            || this.state.clearDisplay\r\n        const currentValue = clearDisplay ? '' : this.state.displayValue\r\n        const displayValue = currentValue + n\r\n        this.setState({ displayValue, clearDisplay: false })\r\n\r\n        if (n !== '.') {\r\n            const i = this.state.current\r\n            const newValue = parseFloat(displayValue)\r\n            const values = [...this.state.values]\r\n            values[i] = newValue\r\n            this.setState({ values })\r\n            console.log(values)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calculator\">\r\n                <Display value={this.state.displayValue} />\r\n                <Button label=\"AC\" click={this.clearMemory} triple />\r\n                <Button label=\"รท\" click={this.setOperation} operation />\r\n                <Button label=\"7\" click={this.addDigit} />\r\n                <Button label=\"8\" click={this.addDigit} />\r\n                <Button label=\"9\" click={this.addDigit} />\r\n                <Button label=\"x\" click={this.setOperation} operation />\r\n                <Button label=\"4\" click={this.addDigit} />\r\n                <Button label=\"5\" click={this.addDigit} />\r\n                <Button label=\"6\" click={this.addDigit} />\r\n                <Button label=\"-\" click={this.setOperation} operation />\r\n                <Button label=\"1\" click={this.addDigit} />\r\n                <Button label=\"2\" click={this.addDigit} />\r\n                <Button label=\"3\" click={this.addDigit} />\r\n                <Button label=\"+\" click={this.setOperation} operation />\r\n                <Button label=\"0\" click={this.addDigit} double />\r\n                <Button label=\".\" click={this.addDigit} />\r\n                <Button label=\"=\" click={this.setOperation} operation />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './Display.css'\r\n\r\nexport default props =>\r\n    <div className=\"display\">{props.value}</div>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <div>\n    <Calculator/>\n  </div>, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}